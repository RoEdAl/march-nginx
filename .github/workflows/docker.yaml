#
# Based on:
#
# Docker docs: Distribute build across multiple runners
# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
#

name: Upload Docker images to GitHub Container Registry (ghcr.io)

on:
  release:
    types: [published]
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    name: Build image
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: ./.github/actions/set-env-variables

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

  mbuild:
    name: Build image
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - platform: linux/amd64
          - platform: linux/arm64
            qemu: arm64
          - platform: linux/arm/v7
            qemu: arm
          - platform: linux/arm/v6
            qemu: arm
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" | tee -a $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: ./.github/actions/set-env-variables

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: ${{ matrix.platform.qemu }}
        with:
          platforms: ${{ matrix.platform.qemu }}
          cache-image: false
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to GitHub Container Registry
        if: env.PUBLISH_IMAGE
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        if: ${{ ! env.PUBLISH_IMAGE }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform.platform }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

      - name: Build and push
        if: env.PUBLISH_IMAGE
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          platforms: ${{ matrix.platform.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          outputs: type=image,"name=ghcr.io/${{ env.GH_REPO }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        if: env.PUBLISH_IMAGE
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        if: env.PUBLISH_IMAGE
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  merge:
    name: Merge images
    runs-on: ubuntu-latest
    needs:
      - mbuild
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: ./.github/actions/set-env-variables

      - uses: ./.github/actions/merge-docker-images
        with:
          password: ${{ secrets.GITHUB_TOKEN }}
        if: env.PUBLISH_IMAGE
